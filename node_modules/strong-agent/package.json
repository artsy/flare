{
  "name": "strong-agent",
  "version": "0.4.14",
  "description": "StrongOps Application Performance Monitoring Agent",
  "author": {
    "name": "StrongLoop",
    "email": "callback@strongloop.com"
  },
  "homepage": "http://strongloop.com",
  "repository": {
    "type": "git",
    "url": "https://github.com/strongloop/strong-agent"
  },
  "bugs": {
    "url": "https://github.com/strongloop/strong-agent/issues"
  },
  "license": {
    "name": "StrongLoop",
    "url": "http://strongloop.com/license/"
  },
  "contributors": [],
  "main": "lib/main",
  "directories": {
    "lib": "./lib"
  },
  "dependencies": {
    "debug": "~0.7.0",
    "jwt-simple": "^0.2.0",
    "semver": "~2.2.1",
    "strong-license": "~1.0.0",
    "underscore": "1.x"
  },
  "devDependencies": {
    "async": "~0.9.0",
    "tap": "git+https://github.com/strongloop/node-tap#production",
    "express": "~3.3.5",
    "loopback": "~1.8.0",
    "sinon": "~1.7.3"
  },
  "scripts": {
    "install": "node-gyp rebuild || exit 0",
    "test": "SL_ENV=dev tap --tap --gc --stderr --timeout 10 ${TESTS:-test/test-*.js}",
    "lint": "make -C src lint"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "keywords": [
    "apm",
    "monitoring",
    "performance",
    "profiling",
    "heap",
    "event loop",
    "analytics",
    "metrics",
    "alerts",
    "profiler",
    "response",
    "time",
    "memory",
    "slowest functions"
  ],
  "readme": "# strong-agent\n\nProfile and control Node.js processes and clusters using StrongOps.\n\n**NOTE: This project is not released under an open source license. We welcome\nbug reports as we continue development, but we are not accepting pull requests\nat this time.**\n\n## Using strong-agent\n\nSee [the full documentation](http://docs.strongloop.com/strong-agent).\n\n## Summary\n\n[Register](https://strongloop.com/register/) with StrongLoop.  It's free for evaluation.\n\nThen:\n\n    npm install -g strong-cli\n    slc update\n    cd .../where/your/app/is\n    slc strongops # ... provide email/password\n    slc run your_server.js\n\nGo to the [dashboard](https://strongloop.com/ops/dashboard) to see your\napplication.\n\n## Configuration\n\nstrong-agent requires an API key and application name, and will not start\nprofiling without them.\n\n### API Key\n\nCan be defined in:\n\n- `userKey`: in profile's `userKey` argument\n- `STRONGLOOP_KEY`: in the environment\n- `userKey`: in strongloop.json (typically created with `slc strongops`)\n\n### Application Name\n\nCan be defined in:\n\n- `appName`: in profile's `appName` argument\n- `STRONGLOOP_APPNAME`: in the environment\n- `name`: in package.json (typical location)\n- `appName`: in strongloop.json (not typical, most package.json has a `name`)\n\n### Proxy\n\nProxy defined as `protocol://[user:pass@]domain[:port]`, where protocol is one\nof \"http\", \"https\", or \"https+noauth\". The `user:pass@` is optional, as is\n`:port`.\n\nCan be defined in:\n\n- `proxy`: in options\n- `https_proxy`,`HTTPS_PROXY`,`http_proxy`,`HTTP_PROXY`: in the environment\n  (lower-case proxy environment variables are traditional on some systems,\n  and these variables may be present already if a proxy is required)\n- `proxy`: in strongloop.json\n\nDefault is none.\n\n### Endpoint\n\nThere is no reason to configure this, except to use HTTP instead of HTTPS if\nyour environment prevents outgoing HTTPS.\n\n- `endpoint` in options\n- `STRONGLOOP_ENDPOINT`: in environment\n- `endpoint` in strongloop.json\n\nDefault is `https://`, it can be defined as `http://` if necessary.\n\n### Metrics API\n\nstrong-agent provides hooks for integration with other metrics aggregators,\nlike [statsd](https://github.com/etsy/statsd/).  An example application can\nbe found [here](https://github.com/strongloop/strong-agent-statsd).\n\nUsage is straightforward:\n\n```javascript\nrequire('strong-agent').use(function(name, value) {\n  console.log('%s=%d', name, value);\n});\n```\n\nNames are always strings and values are always numbers.  The agent reports\nmetrics at a currently fixed interval of 60 seconds.  The reported metrics\nare for the last interval only, i.e. they cover only the last 60 seconds.\nAll values are for the current process only.\n\n* `cpu.system`\n\n  System CPU time.  CPU time spent inside the kernel on behalf of the\n  process, expressed as a percentage of wall clock time.  Can exceed\n  100% on multi-core systems.\n\n  CPU time is the subset of wall clock time where the CPU is executing\n  instructions on behalf of the process, i.e. where the process or its\n  corresponding kernel thread is actually running.\n\n* `cpu.total`\n\n  Total CPU time.  Sum of user and system time, expressed as a percentage\n  of wall clock time.  Can exceed 100% on multi-core systems.\n\n  CPU time is the subset of wall clock time where the CPU is executing\n  instructions on behalf of the process, i.e. where the process or its\n  corresponding kernel thread is actually running.\n\n* `cpu.user`\n\n  User CPU time.  CPU time directly attributable to execution of the\n  userspace process, expressed as a percentage of wall clock time.\n  Can exceed 100% on multi-core systems.\n\n  CPU time is the subset of wall clock time where the CPU is executing\n  instructions on behalf of the process, i.e. where the process or its\n  corresponding kernel thread is actually running.\n\n* `gc.heap.used`\n\n  The part of the V8 heap that is still in use after a minor or major\n  garbage collector cycle, expressed in bytes.\n\n  The V8 heap is where JS objects and values are stored, excluding integers\n  in the range -2,147,483,648 to 2,147,483,647.  (FIXME: exact range differs\n  for ia32 and x64.)\n\n* `heap.total`\n\n  Total size of the V8 heap, expressed in bytes.\n\n  The V8 heap is where JS objects and values are stored, excluding integers\n  in the range -2,147,483,648 to 2,147,483,647.  (FIXME: exact range differs\n  for ia32 and x64.)\n\n* `heap.used`\n\n  The part of the V8 heap that is currently in use.  Expressed in bytes.\n\n  The V8 heap is where JS objects and values are stored, excluding integers\n  in the range -2,147,483,648 to 2,147,483,647.  (FIXME: exact range differs\n  for ia32 and x64.)\n\n* `http.connection.count`\n\n  Number of new HTTP connections in the last interval.  (FIXME: Tracks only\n  one HTTP server per process and it's not very deterministic what server\n  that is.  Fortunately, most applications start only one server.)\n\n* `loop.count`\n\n  The number of event loop ticks in the last interval.\n\n* `loop.minimum`\n\n  The shortest (i.e. fastest) tick in milliseconds.\n\n* `loop.maximum`\n\n  The longest (slowest) tick in milliseconds.\n\n* `loop.average`\n\n  The mean average tick time in milliseconds.\n\n* `messages.in.count`\n\n  Number of received [strong-mq][] or [axon][] messages.\n\n* `messages.out.count`\n\n  Number of sent [strong-mq][] or [axon][] messages.\n\n### Object tracking\n\nThe agent can optionally track the creation and reclamation of JS objects over\ntime.  Tracking objects is an indispensable tool for hunting down memory leaks\nbut as it imposes some CPU and memory overhead, it's disabled by default.\n\n* `agent.metrics.startTrackingObjects()`\n\n  Start tracking objects.\n\n  Object tracking works by taking snapshots of the JavaScript heap at times\n  `t0` and `t1`, then calculating their set difference and intersection.\n  To a first approximation, memory overhead is `O(n)` and computational\n  complexity `O(n * lg n)`, where `n` is the number of objects in the\n  snapshots.\n\n* `agent.metrics.stopTrackingObjects()`\n\n  Stop tracking objects.  No further metrics will be reported.\n\nWhen enabled, the following metrics are reported at 15 second intervals:\n\n* `object.<type>.count`\n\n  The number of objects created and reclaimed of type `<type>` in the last\n  interval.  `<type>` is the name of the constructor that created the object,\n  e.g. `Array`, `Date`, etc.\n\n  If the count is less than zero, it means more objects have been reclaimed\n  than created.\n\n* `object.<type>.size`\n\n  The total size of the objects created and reclaimed of type `<type>` in\n  the last interval.  `<type>` is the name of the constructor that created\n  the object, e.g. `Array`, `Date`, etc.\n\n  If the size is less than zero, it means more objects have been reclaimed\n  than created.\n\n### CPU profiling\n\nThe agent has a built-in CPU profiler that produces output in a format that can\nbe imported into the [Chrome Developer Tools][].  The profiler is available with\nNode.js v0.11 and up.\n\n* `agent.metrics.startCpuProfiling()` - Start the CPU profiler.  Throws an\n  Error when the CPU profiler is unavailable.\n\n  Calling this method multiple times is mostly harmless: the first call starts\n  the profiler, successive calls are no-ops.\n\n* `agent.metrics.stopCpuProfiling()` - Stop the CPU profiler.  Returns the\n  CPU profiler information as a JSON string that can be saved to disk for\n  further inspection.  Throws an Error when the CPU profile is unavailable, or\n  has not been started.\n\n  The filename must have a `.cpuprofile` suffix in order for the\n  [Chrome Developer Tools] importer to recognize it.\n\nExample usage:\n\n```javascript\n// Start collecting CPU profile traces whenever the\n// average event loop tick time exceeds 100 ms.\nvar agent = require('strong-agent');\nvar fs = require('fs');\nvar profiling = false;\n\nagent.use(function(name, value) {\n  if (name !== 'loop.average') return;\n  if (value > 100) {\n    if (profiling === true) return;\n    agent.metrics.startCpuProfiling();\n    profiling = true;\n  } else if (profiling === true) {\n    var filename = 'CPU-' + Date.now() + '.cpuprofile';\n    var data = agent.metrics.stopCpuProfiling();\n    fs.writeFileSync(filename, data);\n    profiling = false;\n  }\n});\n```\n\n[axon]: https://github.com/visionmedia/axon\n[strong-mq]: https://github.com/strongloop/strong-mq\n[Chrome Developer Tools]: https://developer.chrome.com/devtools/docs/cpu-profiling\n",
  "readmeFilename": "README.md",
  "_id": "strong-agent@0.4.14",
  "_shasum": "2fd59b70bf520d5e38ad342a98d15345b39bc402",
  "_from": "strong-agent@*",
  "_resolved": "http://registry.npmjs.org/strong-agent/-/strong-agent-0.4.14.tgz"
}
